_RACCOURCIS CLAVIER__________________________________________________


Toutes les commandes se trouvent dans le dossier /bin.


- ctrl + c :
Arrêter un processus en cours dans ce même terminal


- ctrl + d :
Envoyer l'entrée en attente à l'application. Si aucune saisie n'a été faite, la valeur envoyée est alors égale à 0


- ctrl + z :
Suspendre un processus en cours


- q :
Quitter une interface (comme "more", "man" ou "vim")


- option + maj + L :
pipe. uniquement sur clavier Apple (à droite du clavier)


- option + maj + N :
tilde. uniquement sur clavier Apple (à droite du clavier)








_UTILISATEUR & SESSION_______________________________________________


- whoami :
Affiche le nom d'utilisateur de la session courante


- id NomUtilisateur :
Affiche les informations spécifiques à l'utilisateur "NomUtilisateur"


- sudo :
'Superuser do'. Placé devant une commande, "sudo" permet de donner les droits superuser/root à l'utilisateur courant


- useradd -m nomUtilisateur :
Crée/ajoute un nouvel utilisateur appellé "nomUtilisateur" (necessite les droits superuser/root). L'option "-m" permet de lui ajouter un dossier "home" à la racine du disque
Attention! Il est impossible de se connecter avec le compte "nomUtilisateur" tant qu'aucun mot de passe n'a été attribué


- passwd nomUtilisateur :
(necessite les droits superuser/root)


- userdel -r nomUtilisateur :
Supprime l'utilisateur appellé "nomUtilisateur" (necessite les droits superuser/root). L'option "-r" permet aussi d'effacer le dossier "home" spécifique à cet utilisateur








_NAVIGATION__________________________________________________________


- pwd :
Affiche le nom et le chemin du dossier courant dans lequel l'utilisateur se trouve


- ls :
Énumérer (lister) les fichiers "ordinaires" (ne commençant pas par ".") dans le répertoire courant


- ls nomDuDossier :
Énumérer (lister) les fichiers situés dans le répertoire "nomDuDossier"


- ls -l :
Comme "ls" mais affiche aussi des informations supplémentaires comme les droits (VOIR FICHIER "Unix_File_Folder_Notes.txt")


- ls -la :
Comme "ls" mais affiche aussi les fichiers cachés


- ls s* :
Affiche tous les fichiers (et dossiers...?) dont le nom commence par la lettre "s"


- ls .h :
Affiche tous les fichiers (et dossiers...?) dont le nom se termine par la lettre "h"


- cd nomDuDossier :
Déplace l'utilisateur dans le dossier "nomDuDossier" (si ce dernier se trouve dans le répertoire courant)


- cd /home/NomUtilisateur/nomDuDossier :
Déplace l'utilisateur/session dans le repertoire "nomDuDossier"


- cd .. :
Revenir un répertoire en arrière dans l'arborescence de dossiers


- cd ~ :
Permet de revenir directement au répertoire "/home/NomUtilisateur"


- cd / :
Déplace l'utilisateur/session à l'origine de la partition sur laquelle l'OS est installé


- cd /media/NomUtilisateur/D\:/ :
Déplace l'utilisateur/session à l'origine de la partition D\: (uniquement si celle-ci a été préalablement montée)








_MANIPULATION DE DOSSIERS & FICHIERS_________________________________


- mkdir nomDuDossier :
Crée un dossier nommé "nomDuDossier" dans le répertoire courant


- mkdir nomDuDossier1 nomDuDossier2 :
Crée deux dossiers nommés "nomDuDossier1" et "nomDuDossier2" dans le répertoire courant


- touch nomDuFichier :
Crée un fichier portant le nom "nomDuFichier"


- touch nomDuFichier.txt :
Crée un fichier portant le nom spécifié avec l'extention ".txt"


- mv nomDuFichier nomDuDossier :
Change l'emplacement/déplace le fichier "nomDuFichier" (initialement situé dans le dossier courant) dans le dossier "nomDuDossier" (lui aussi situé dans le dossier courant)


- mv ~/Documents/nomDuFichier nomDuDossier :
Déplace le fichier depuis un dossier spécifié par son chemin vers un autre dossier situé dans le répertoire courant


- mv ~/Documents/nomDuFichier ~/Documents/nomDuDossier :
Déplace le fichier depuis un dossier spécifié par son chemin vers un autre dossier lui aussi spécifié par son chemin


- mv nomDuFichierOld nomDuFichierNew :
Renomme le fichier "nomDuFichierOld" en "nomDuFichierNew"


- cp nomDuFichier nomDuFichierCopie :
Fait une copie du fichier spécifié dans le dossier courant


- cp nomDuFichier nomDuDossier :
Fait une copie du fichier spécifié et le place dans le dossier "nomDuDossier" (situé dans le répertoire courant)


- cp  Documents/nomDuFichier nomDuDossier :
Fait une copie du fichier spécifié par son chemin et le place dans le dossier "nomDuDossier" (situé dans le répertoire courant)


- cp /usr/include/s*.h :
Copie tous les fichiers situés dans le dossier courant commençant par "s" et se terminant par "h" dans le dossier /usr/include.


- rm nomDuFichier :
Supprime le fichier spécifié. Ne pas oublier de rajouter l'extention à la fin du nom si jamais le fichier en a une


- rm -r nomDuDossier :
Supprime le dossier spécifié ainsi que tous les fichiers situés à l'intérieur


- rmdir nomDuDossier :
Supprime le dossier "nomDuDossier" (uniquement si celui-ci ne possède pas de contenu)








_PERMISSIONS_________________________________________________________

VOIR FICHIER "Unix_File_Folder_Notes.txt"


- chmod o+w nomDuFichier :
Donne les droits d'écriture du fichier "nomDuFichier" à n'importe qui


- chmod g-x nomDuFichier :
Enlève les droits d'execution au groupe auquel le fichier "nomDuFichier" est associé


- chmod u-r nomDuFichier :
Enlève les droits de lecture à l'utilisateur propriétaire du fichier "nomDuFichier" (aka l'utilisateur qui l'a créé)


- chmod +x nomDuFichier :
Donne les droits d'éxecution à l'utilisateur propriétaire, le groupe ainsi qu'à tous les autres utilisateurs


- chmod 777 nomDuFichier :
Donne tous les droits (lecture, écriture et éxecution / 4 + 2 + 1) à tous les utilisateurs (même les invités)


- chmod 000 nomDuFichier :
Enlève tous les droits (0) à tous les utilisateurs (même les invités)


- chmod 754 nomDuFichier :
Donne tous les droits (lecture, écriture et éxecution / 4 + 2 + 1) au propriétaire du fichier, les droits de lecture et d'execution (4 + 1) au groupe
et les droits de lecture (4) à n'importe quel autre utilisateur








_COMPILATION EN C____________________________________________________


- gcc nomDuProgramme.c :
Compile un fichier en ".c". Le nouveau programme obtenu s'appelle "a.out"


- gcc nomDuProgramme.c -o nomDuProgramme :
Compile un fichier en ".c". Le nouveau programme obtenu s'appelle "nomDuProgramme"


- make nomDuProgramme :
Compilation intelligente. Attribue automatiquement le nom au nouveau programme en fonction du nom de fichier reconnu


- ./nomDuProgramme :
Execute "nomDuProgramme" dans le terminal (si ce dernier se trouve dans le répertoire courant)