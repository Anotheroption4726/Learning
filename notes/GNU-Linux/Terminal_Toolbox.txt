_GENERAL_______________________________________________________________________________________________________________________




	>> LIENS

		https://linuxmint.com/
		https://community.linuxmint.com/




	>> CHEMINS


		- ~/.bashrc :
			Fichier de configuration de la console personnel

		- /etc/bash.bashrc :
			Fichier de configuration de la console général pour tous les utilisateurs (necessite les droits superuser/root)

		- ~/.profile :
			Fichier de configuration de la console du profil courant (lorsqu'on ouvre tty1 par exemple, voir raccourcis GUI). 
			Pas vraiment utile à configurer (".bashrc" se lance après ".profile" de toute manière)

		- /bin :
			Contient des programmes (exécutables) susceptibles d'être utilisés par tous les utilisateurs de la machine

		- /sbin :
			Contient des programmes système importants. Uniquement utilisables en mode 'superutilisateur'

		- /boot :
			Fichiers permettant le démarrage de Linux

		- /dev :
			Fichiers contenant les périphériques. Ce dossier contient des sous-dossiers qui « représentent » chacun un 
			périphérique. On y retrouve ainsi par exemple le fichier qui représente le lecteur CD

		- /home : 
			Répertoires personnels des utilisateurs

		- /media :
			Lorsqu'un périphérique amovible (comme une carte mémoire SD ou une clé USB) est inséré dans votre ordinateur, Linux 
			vous permet d'y accéder à partir d'un sous-dossier de media

		- /tmp :
			Dossier temporaire utilisé par les programmes pour stocker des fichiers

		- /usr :
			C'est un des plus gros dossiers, dans lequel vont s'installer la plupart des programmes demandés par l'utilisateur

		- /var :
			Ce dossier contient des données « variables », souvent des logs (traces écrites de ce qui s'est passé récemment sur 
			l'ordinateur)

		- /lib :
			Dossier contenant les bibliothèques partagées (généralement des fichiers.so) utilisées par les programmes. C'est en 
			fait là qu'on trouve l'équivalent des.dll de Windows




	>> ~/.BASHRC CONFIG

		export PATH=$PATH:/usr/bin/ :
			Rajoute le chemin "/usr/bin/" à la variable "$PATH" (à chaque fois que l'on démarre un nouveau shell "Bash"). Il 
			s'agit ici d'un exemple, ce chemin fait déjà partie de la variable "$PATH" par défaut

		alias brave='/usr/bin/brave-browser'
			Alias personnalisé. Lance le navigateur "Brave Browser" si jamais l'on entre la commande "brave"

		alias ll='ls -l' :
			Fait un "ls -l" si jamais l'on entre la commande "ll"

		alias brave='cd /usr/bin && ./brave-browser' :
			Alias personnalisé. Si jamais l'on entre la commande "brave", déplace l'utilisateur dans le dossier "/usr/bin" et 
			lance le navigateur "Brave Browser"


	>> RACCOURCIS


		- Option + maj + L :
			pipe. uniquement sur clavier Apple (à droite du clavier)


		> GUI

			- Ctrl + Alt + F1 :
				Ouvre le terminal tty1 (le GUI devient inaccessible, necessite un login et un mot de passe utilisateur)

			- Ctrl + Alt + F2 :
				Ouvre le terminal tty2 sans passer par l'interface graphique

			- Ctrl + Alt + F3 :
				Ouvre le terminal tty3 sans passer par l'interface graphique

			- Ctrl + Alt + F4 :
				Ouvre le terminal tty4 sans passer par l'interface graphique

			- Ctrl + Alt + F5 :
				Ouvre le terminal tty5 sans passer par l'interface graphique

			- Ctrl + Alt + F6 :
				Ouvre le terminal tty6 sans passer par l'interface graphique


		> TERMINAL

			Tous les raccourcis se trouvent dans le dossier /bin.

			- Up :
				Retrouver les commandes entrées précédemment dans la console

			- Ctrl + L :
				Efface le contenu de la console

			- Ctrl + d :
				Déconnexion/quitter la console				

			- Ctrl + Alt + F7 :
				Retour en mode interface graphique (si l'on était en train d'utiliser tty1, tty2...)

			- Ctrl + c :
				Arrêter un processus en cours dans ce même terminal

			- Ctrl + d :
				Envoyer l'entrée en attente à l'application. Si aucune saisie n'a été faite, la valeur envoyée est alors égale 
				à 0. Permet aussi de quitter le mode 'superuser' permanent

			- Ctrl + z :
				Suspendre un processus en cours

			- Ctrl + r :
				Permet de rechercher et d'executer une commande que l'on a déjà entré dans la console

			- Ctrl + a :
				Ramène le curseur au début de la commande

			- Ctrl + e :
				Ramène le curseur à la fin de la ligne de commandes


		> INTERFACES

			Ces raccourcis s'appliquent aux interfaces comme "more", "man" ou "vim"

			- q :
				Quitter l'interface




	>> COMMANDES


		> SYNTAXE

			- Paramètres courts :
				commande -d
				commande -d -a -U -h
				commande -daUh

			- Paramètres longs :
				commande --parametre
				commande --parametre1 --parametre2

			- Paramètres courts et longs :
				commande -daUh --autreparametre

			- Paramètres avec valeurs :
				commande -p 14
				commande --parametre=14


		> SYSTEME

			- lsb_release -d :
				Affiche la version courante de Linux utilisée

			- hostnamectl :
				Affiche les informations du système (nom de l'ordinnateur, OS, Kernel, Architecture...)

			- shutdown :
				Eteint le système

			- sudo reboot :
				Redémarre le système

			- history :
				Affiche l'historique des commandes entrées dans la console dans l'ordre chronologique

			- date :
				Affiche la date, l'heure et le fuseau horaire

			- clear :
				Efface le contenu de la console

			- which nomDeCommande :
				Affiche le chemin de localisation d'un programme, binaire ou d'une autre commande. Ainsi, 'which python' 
				devrait afficher '/usr/bin/python' et 'which pwd' devrait afficher '/bin/pwd'

			- man nomDeCommande :
				Affiche la page du manuel de "nomDeCommande"

			- nomDeCommande -h :
				Affiche une version simplifiée du man concernant la commande "nomDeCommande". Parfois plus clair que le man

			- apropos rechercheDeCommande :
				Fait une recherche dans les descriptions des commandes en utilisant le terme "rechercheDeCommande"

			- echo $0 :
				Affiche le type de shell que l'on est en train d'utiliser (Bash, Dash, Zsh, Tcsh, Ksh, Fish...). $0 représente
				l'élément "0" d'une commande, càd le type de shell qui la fait fonctionner

			- echo $PATH :
				Affiche la liste des dossiers contenus dans la variable "$PATH"

			- export PATH=$PATH:/usr/bin/ :
				Rajoute le chemin "/usr/bin/" à la variable "$PATH" (temporairement)

			- exit :
				Déconnexion/quitter la console mais aussi le mode 'superuser' permanent


		> UTILISATEUR, GROUPES & SESSION

			- whoami :
				Affiche le nom d'utilisateur de la session courante

			- id nomUtilisateur :
				Affiche les informations spécifiques à l'utilisateur "NomUtilisateur"

			- sudo :
				'Superuser do'. Placé devant une commande, "sudo" permet de donner temporairement les droits superuser/root à 
				l'utilisateur courant (mot de passe requis)

			- sudo su :
				Donne de manière permanente les droits superuser/root à l'utilisateur courant (mot de passe requis). Utiliser 
				la commande 'exit' ou le raccourci 'Ctrl + d' pour sortir de ce mode
					* 'username@computer-J45DS:~$' : '$' indique qu'on est en mode utilisateur normal *
					* 'username@computer-J45DS:~#' : '#' indique qu'on est en mode superutilisateur *

			- su nomUtilisateur :
				Démarre un process avec lequel on sera connecté en tant que "nomUtilisateur" (mot de passe requis). On quitte 
				le process avec le raccourci 'Ctrl + d' ou la commande 'exit'

			- useradd -m nomUtilisateur :
				Crée/ajoute un nouvel utilisateur appellé "nomUtilisateur" (necessite les droits superuser/root). L'option "-m" 
				permet de lui ajouter un dossier "home" à la racine du disque. Attention! Il est impossible de se connecter 
				avec le compte "nomUtilisateur" tant qu'aucun mot de passe n'a été attribué

			- passwd nomUtilisateur :
				Permet de modifier le mot de passe de l'utilisateur "nomUtilisateur" (necessite les droits superuser/root)

			- usermod -l nomUtilisateurNew nomUtilisateurOld :
				Change le nom de l'utilisateur "nomUtilisateurOld" en "nomUtilisateurNew" (necessite les droits superuser/root)
				Attention! Cette commande ne change pas le nom du dossier 'Home' correspondant à l'utilisateur

			- usermod -g nomDuGroupe nomUtilisateur :
				Attribue le groupe "nomDuGroupe" à l'utilisateur "nomUtilisateur" (et remplace l'ancien groupe auquel il 
				appartenait)

			- userdel -r nomUtilisateur :
				Supprime l'utilisateur appellé "nomUtilisateur" (necessite les droits superuser/root). L'option "-r" permet 
				aussi d'effacer le dossier "home" spécifique à cet utilisateur

			- cat /etc/passwd :
				Liste tous les utilisateurs enregistrés sur le système ainsi que leurs UIDs et les groupes auxquels ils 
				appartiennent

			- addgroup nomDuGroupe :
				Ajoute un nouveau groupe nommé "nomDuGroupe" (nécessite les droits superuser/root)

			- cat /etc/group :
				Affiche la liste des groupes présents dans le système

			- delgroup nomDuGroupe :
				Supprime le groupe "nomDuGroupe" (nécessite les droits superuser/root)


		> NAVIGATION

			- pwd :
				Affiche le nom et le chemin du dossier courant dans lequel l'utilisateur se trouve

			- ls :
				Énumérer (lister) les fichiers "ordinaires" (ne commençant pas par ".") dans le répertoire courant

			- ls nomDuDossier :
				Énumérer (lister) les fichiers situés dans le répertoire "nomDuDossier"

			- ls -a :
				Comme "ls" mais affiche aussi tous les fichiers et dossiers cachés

			- ls -l :
				Comme "ls" mais affiche aussi des informations supplémentaires comme les droits (Voir section "LS -L"
				dans le fichier "Notes.txt")

			- ls -la :
				Comme "ls" mais affiche aussi les fichiers et dossiers cachés ainsi que leurs informations

			- ls -lh :
				Comme "ls -l" mais la taille des fichiers s'affiche en Ko, Mo, Go, etc...

			- ls -lt :
				Comme "ls -l" mais trie les résultats par ordre chronologique de modification

			- ls -larth :
				Affiche le détail de tous les fichiers et dossiers (cachés ou pas), organisés en ordre chronologique 
				(inversé) avec la taille affichée en Ko, Mo, Go, etc...

			- ls s* :
				Affiche tous les fichiers (et dossiers...?) dont le nom commence par la lettre "s"

			- ls .h :
				Affiche tous les fichiers (et dossiers...?) dont le nom se termine par la lettre "h"

			- cd nomDuDossier :
				Déplace l'utilisateur dans le dossier "nomDuDossier" (si ce dernier se trouve dans le répertoire courant)

			- cd /home/NomUtilisateur/nomDuDossier :
				Déplace l'utilisateur/session dans le repertoire "nomDuDossier"

			- cd .. :
				Revenir un répertoire en arrière dans l'arborescence de dossiers

			- cd ~ :
				Permet de revenir directement au répertoire "/home/NomUtilisateur"

			- cd / :
				Déplace l'utilisateur/session à l'origine de la partition sur laquelle l'OS est installé

			- cd /media/NomUtilisateur/D\:/ :
				Déplace l'utilisateur/session à l'origine de la partition D\: (uniquement si celle-ci a été préalablement 
				montée)

			- du :
				Renvoie la taille totale que font les dossiers contenus dans le dossier

			- du -h :
				Renvoie la taille totale que font les dossiers contenus dans le dossier (en Ko, Mo, Go, etc...)

			- du -ah :
				Renvoie la taille totale que font les dossiers et les fichiers contenus dans le dossier (en Ko, Mo, Go, etc...)

			- du -sh :
				Renvoie l'espace total occupé par le dossier courant


		> MANIPULATION DE DOSSIERS & FICHIERS

			- mkdir nomDuDossier :
				Crée un dossier nommé "nomDuDossier" dans le répertoire courant

			- mkdir nomDuDossier1 nomDuDossier2 :
				Crée deux dossiers nommés "nomDuDossier1" et "nomDuDossier2" dans le répertoire courant

			- mkdir -p nomDuDossier1/nomDuDossier2/nomDuDossier3 :
				Créé le dossier nomDuDossier1, puis à l'intérieur le sous-dossier nomDuDossier2, puis à l'intérieur encore le 
				sous-dossier nomDuDossier3

			- touch nomDuFichier :
				Crée un fichier portant le nom "nomDuFichier"

			- touch "nom du fichier" :
				Crée un fichier portant le nom "nom du fichier"

			- touch nomDuFichier.txt :
				Crée un fichier portant le nom spécifié avec l'extention ".txt"

			- mv nomDuFichier nomDuDossier :
				Change l'emplacement/déplace le fichier "nomDuFichier" (initialement situé dans le dossier courant) dans le 
				dossier "nomDuDossier" (lui aussi situé dans le dossier courant)

			- mv ~/Documents/nomDuFichier nomDuDossier :
				Déplace le fichier depuis un dossier spécifié par son chemin vers un autre dossier situé dans le répertoire 
				courant

			- mv ~/Documents/nomDuFichier ~/Documents/nomDuDossier :
				Déplace le fichier depuis un dossier spécifié par son chemin vers un autre dossier lui aussi spécifié par son 
				chemin

			- mv nomDuFichierOld nomDuFichierNew :
				Renomme le fichier "nomDuFichierOld" en "nomDuFichierNew"

			- mv nomDuFichierOld nomDuDossier/nomDuFichierNew :
				Renomme le fichier "nomDuFichierOld" en "nomDuFichierNew" et le déplace dans le dossier "nomDuDossier"

			- mv nomDuDossier1 nomDuDossier2 :
				Déplace le dossier "nomDuDossier1" (avec tous les fichiers et sous-dossiers qu'il contient) dans le dossier 
				"nomDuDossier2"

			- cp nomDuFichier nomDuFichierCopie :
				Fait une copie du fichier spécifié dans le dossier courant

			- cp nomDuFichier nomDuDossier :
				Fait une copie du fichier spécifié et le place dans le dossier "nomDuDossier" (situé dans le répertoire 
				courant)

			- cp nomDuFichier nomDuDossier/nomDuFichierCopie :
				Fait une copie du fichier spcifié, le renomme et le place dans le dossier "nomDuDossier"

			- cp  Documents/nomDuFichier nomDuDossier :
				Fait une copie du fichier spécifié par son chemin et le place dans le dossier "nomDuDossier" (situé dans le 
				répertoire courant)

			- cp *.jpg nomDuDossier :
				Fait une copie de tous les fichiers se finissant avec l'extension ".jpg" dans le dossier "nomDuDossier"

			- cp /usr/include/s*.h :
				Copie tous les fichiers situés dans le dossier courant commençant par "s" et se terminant par "h" dans le 
				dossier /usr/include.

			- cp -R nomDuDossier nomDuDossierCopie :
				Fait une copie du dossier spécifié (avec tous les fichiers et sous-dossiers qu'il contient) dans le dossier 
				courant

			- rm nomDuFichier :
				Supprime le fichier spécifié. Ne pas oublier de rajouter l'extention à la fin du nom si jamais le fichier en a 
				une

			- rm -v nomDuFichier :
				Supprime le fichier spécifié en rajoutant une ligne de dialogue dans la console expliquant ce qui vient 
				d'être fait

			- rm -i nomDuFichier1 nomDuFichier2 :
				Supprime les fichiers spécifiés mais demande une confirmation pour chacun d'eux ("o" pour "oui" et "n" pour 
				"non")

			- rm -f nomDuFichier :
				Force la suppression du fichier

			- rm -fiv nomDuFichier1 nomDuFichier2 :
				Force la suppression des fichiers spécifiés mais demande une confirmation pour chacun d'eux, puis rajoute 
				une ligne de dialogue dans la console expliquant ce qui vient d'être fait

			- rm -r nomDuDossier :
				Supprime le dossier spécifié ainsi que tous les fichiers situés à l'intérieur

			- rmdir nomDuDossier :
				Supprime le dossier "nomDuDossier" (uniquement si celui-ci ne possède pas de contenu)

			- sudo rm -rf /* :
				Supprime tout le disque dur depuis la racine, sous-dossiers compris, et ne demande aucune confirmation (à part 
				le mot de passe superutilisateur). Il n'y a aucune possibilité de récupération, il faut réinstaller Linux


		> PERMISSIONS

			Voir les sections "CHMOD" et "LS -L" dans le fichier "Notes.txt"

			- chmod o+w nomDuFichier :
				Donne les droits d'écriture du fichier "nomDuFichier" à n'importe qui

			- chmod g-x nomDuFichier :
				Enlève les droits d'execution au groupe auquel le fichier "nomDuFichier" est associé

			- chmod u-r nomDuFichier :
				Enlève les droits de lecture à l'utilisateur propriétaire du fichier "nomDuFichier" (aka l'utilisateur qui l'a 
				créé)

			- chmod +x nomDuFichier :
				Donne les droits d'éxecution à l'utilisateur propriétaire, le groupe ainsi qu'à tous les autres utilisateurs

			- chmod 777 nomDuFichier :
				Donne tous les droits (lecture, écriture et éxecution / 4 + 2 + 1) à tous les utilisateurs (même les invités)

			- chmod 000 nomDuFichier :
				Enlève tous les droits (0) à tous les utilisateurs (même les invités)

			- chmod 754 nomDuFichier :
				Donne tous les droits (lecture, écriture et éxecution / 4 + 2 + 1) au propriétaire du fichier, les droits de 
				lecture et d'execution (4 + 1) au groupe et les droits de lecture (4) à n'importe quel autre utilisateur

			- chmod -R 754 nomDuDossier :
				Applique un changement de droits au dossier "nomDuDossier" qui s'applique aussi sur tous les fichiers et 
				sous-dossiers que le dossier contient

			- chown nomUtilisateur nomDuFichier :
				Le propriétaire du fichier "nomDuFichier" est maintenant "nomUtilisateur" (necessite les droits superuser/root)

			-chown -R nomUtilisateur nomDuDossier :
				Le propriétaire du dossier "nomDuDossier" (avec tous les fichiers et sous-dossiers qu'il contient) est
				maintenant "nomUtilisateur" (necessite les droits superuser/root)

			- chgrp nomDuGroupe nomDuFichier :
				Le groupe du fichier "nomDuFichier" est maintenant "nomDuGroupe" (necessite les droits superuser/root)

			- chown -R nomUtilisateur:nomDuGroupe nomDuDossier :
				Le propriétaire du dossier "nomDuDossier" est maintenant "nomUtilisateur" et son groupe est nomDuGroupe (avec 
				tous les fichiers et sous-dossiers qu'il contient) (necessite les droits superuser/root)


		> LECTURE DE CONTENU

			- cat nomDuFichier :
				Affiche le contenu du fichier "nomDuFichier" en texte dans la console. Affiche tout le contenu en une fois

			- cat -n nomDuFichier :
				Affiche le contenu du fichier "nomDuFichier" en texte dans la console avec les lignes numérotées

			- less nomDuFichier :
				Affiche progressivement le contenu du fichier, page par page
				* Espace : affiche la suite du fichier d'un écran *
				* Entrée : affiche la suite du fichier d'une ligne *
				* = : indique où en est dans le fichier (numéro des lignes affichées et pourcentage) *
				* h : affiche l'aide *
				* / : mode recherche *

			- tail -f /var/log/syslog :
				Lance un process qui va mettre à jour l'affichage de la fin du contenu d'un fichier en temps réel (ici pour 
				surveiller les log du système)


		> LIENS PHYSIQUES ET SYMBOLIQUES

			- ln nomDuFichier1 nomDuFichier2 :
				Crée un fichier "nomDuFichier2" possédant un lien physique avec "nomDuFichier1". Cette commande ne marche
				pas sur les répertoires

			- ln -s nomDuFichier1 nomDuFichier2 :
				Crée un fichier "nomDuFichier2" possédant un lien symbolique avec "nomDuFichier1". Si l'on supprime 
				"nomDuFichier1", "nomDuFichier2" pointera vers un fichier qui n'existe plus. Le lien symbolique sera cassé, on 
				parlera alors de « lien mort ». Cette commande marche aussi sur les répertoires


		> RECHERCHE

			- locate nomDeLaRecherche :
				Affiche tous les fichiers présents sur le système qui contiennent le mot "nomDuFichier" dans leur nom. Que se 
				soient des fichiers ou des dossiers, il n'y a pas de différence. Cette recherche se fait à partir d'une base de 
				données mise à jour toutes les 24 heures

			- sudo updatedb :
				Met à jour la base de données de fichiers pour la commande "locate"

			- find -name nomDuFichier.txt :
				Recherche et affiche, à partir du répertoire courant et dans tous les sous-répertoires, le ou les fichier(s) 
				"nomDuFichier.txt". Le nom du fichier doit exactement être "nomDuFichier.txt"

			- find ~/Documents/nomDuDossier -name nomDuFichier.txt :
				Recherche et affiche, depuis "nomDuDossier" et dans tous les sous-répertoires, le ou les fichier(s) 
				"nomDuFichier.txt"

			- find -name '*terme' :
				Recherche et affiche, à partir du répertoire courant et dans tous les sous-répertoires, tout fichier se 
				terminant par le terme "terme"

			- find -name 'terme*'' :
				Recherche et affiche, à partir du répertoire courant et dans tous les sous-répertoires, tout fichier commençant 
				par le terme "terme"

			- find -size +10M :
				Recherche et affiche, à partir du répertoire courant et dans tous les sous-répertoires, tout fichier dont la 
				taille est supèrieure à 10 Mo. On utilise aussi "k" pour "Ko" et "g" pour "Go"

			- find -size -10M :
				Recherche et affiche, à partir du répertoire courant et dans tous les sous-répertoires, tout fichier dont la 
				taille est inférieure à 10 Mo

			- find -atime 6 :
				Recherche et affiche, à partir du répertoire courant et dans tous les sous-répertoires, tout fichier dont la 
				modification a été faite il y a moins de 7 jours

			- find -type d :
				Recherche et affiche tous les dossiers contenus à partir du répertoire courant et dans tous les sous-répertoires

			- find -type f :
				Recherche et affiche tous les fichiers contenus à partir du répertoire courant et dans tous les sous-répertoires

			- find -name nomDuFichier -delete :
				Recherche et supprime, à partir du répertoire courant et dans tous les sous-répertoires, tous les fichiers 
				"nomDuFichier"

			- find -name '*.txt' -delete :
				Recherche et supprime, à partir du répertoire courant et dans tous les sous-répertoires, tous les fichiers se 
				terminant par l'extension ".txt"

			- find -name nomDuFichier -exec chmod 000 {} \; :
				Recherche et retire tous les droits, à partir du répertoire courant et dans tous les sous-répertoires, de tous 
				les fichiers "nomDuFichier". Les accolades "{}" sont remplacées par "nomDuFichier". La commande doit finir par 
				"\;" obligatoirement

			- find -name '*txt' -exec mv {} nomDuDossier \; :
				Recherche et déplace dans le dossier "nomDuDossier", à partir du répertoire courant et dans tous les 
				sous-répertoires, tous les fichiers se terminant avec l'extension ".txt"

			- find -name '*~' -o \( -name '#*' -o -name '*#' \) :
				Recherche et affiche, à partir du répertoire courant et dans tous les sous-répertoires, tout fichier dont le 
				nom se termine par ~, ou commence et se termine par #








_APT___________________________________________________________________________________________________________________________




	>> LIENS

		https://doc.ubuntu-fr.org/depots
		https://doc.ubuntu-fr.org/sources.list (ac liens pour les listes d'url de depots)
		https://doc.ubuntu-fr.org/ppa

		https://community.linuxmint.com/tutorial/view/588




	>> CHEMINS


		- /etc/apt/sources.list :
			Fichier source contenant la liste des dépôts et leurs urls

		- /etc/apt/sources.list.d/ :
			Dossier des dépôts PPA (Personal Package Archives) présents sur le système

		- /etc/apt/sources.list.d/official-package-repositories.list :
			Fichier source contenant la liste des dépôts et leurs urls sur Linux Mint. Ne pas modifier manuellement, pour cela
			il vaut mieux utiliser l'interface graphique "Software Sources"




	>> /ETC/APT/SOURCES.LIST CONFIG


		Voir section "/ETC/APT/SOURCES.LIST" dans le fichier "Notes.txt"




	>> COMMANDES


		- grep -Rn --include=\*.list ^[^\#] /etc/apt/ :
			Liste le détail de tous les dépôts (PPA ou non) en une seule fois

		- ls -l /etc/apt/sources.list.d/ :
			Liste les dépôts PPA

		- apt-get update :
			Met à jour le cache (necessite les droits superuser/root)

		- apt-get upgrade :
			Installe les dernières versions de tous les paquets présents sur le système (necessite les droits superuser/root).
			Faire un "apt-get update" avant

		- apt-cache search nomDuPaquet :
			Effectue une recherche de paquet par nom dans le cache

		- apt-cache show nomDuPaquet :
			Affiche la description et les détails du paquet

		- apt-get install nomDuPaquet :
			Installe le paquet "nomDuPaquet" ainsi que toutes ses dépendances sur le système (necessite les droits 
			superuser/root)

		- dpkg -L nomDuPaquet :
			Liste tous les fichiers, dossiers et chemins présents sur le système correspondant au paquet "nomDuPaquet" installé

		- apt-get remove nomDuPaquet :
			Désinstalle/supprime le paquet "nomDuPaquet" (necessite les droits superuser/root)

		- apt-get purge nomDuPaquet :
			Désinstalle/supprime le paquet "nomDuPaquet" ainsi que toutes ses dépendances non utilisées (necessite les droits
			 superuser/root)

		- sudo apt-get autoclean && sudo apt-get autoremove :
			Nettoie le cache et supprime tous les paquets installés par d'autres paquets qui ne sont plus necessaires








_NANO__________________________________________________________________________________________________________________________




	>> CHEMINS

		- ~/.nanorc :
			Fichier de configuration de Nano personnel. N'existe pas par défaut, il faut le créer

		- /etc/nanorc :
			Fichier de configuration de Nano général pour tous les utilisateurs (necessite les droits superuser/root)

		- /usr/share/nano/ :
			Dossier contenant les fichiers de coloration intelligente pour la configuration de "nanorc" ou ".nanorc"


	>> ~/.NANORC CONFIG

		- set mouse :
			Autorise l'utilisation de la souris

		- set autoindent :
			Indentation automatique

		- include "/usr/share/nano/c.nanorc" :
			Active la coloration intelligente pour les fichiers en ".c" (C/C++)

		- include "/usr/share/nano/python.nanorc" :
			Active la coloration intelligente pour les fichiers en ".py" (Python)


	>> RACCOURCIS

		- Ctrl + g :
			Affichage de l'écran d'aide

		- Ctrl + k :
			Couper la ligne de texte (et la mettre dans le presse-papier)

		- Ctrl + u :
			Coller la ligne de texte que l'on vient de couper

		- Ctrl + c :
			Afficher à quel endroit du fichier le curseur est positionné (ligne, colonne…)

		- Ctrl + w :
			Rechercher dans le fichier. "Ctrl + c" pour annuler. Pour continuer la recherche (passer au terme suivant), il faut
			refaire "Ctrl + w" puis directement taper sur "Entrée"

		- Ctrl + o :
			Sauvegarder

		- Ctrl + x :
			Quitter


	>> COMMANDES

		- nano nomDuFichier.txt :
			Ouvre "nomDuFichier.txt" dans nano

		- nano -m nomDuFichier.txt :
			Ouvre "nomDuFichier.txt" dans nano et autorise l'utilisation de la souris

		- nano -i nomDuFichier.txt :
			Ouvre "nomDuFichier.txt" dans nano avec indentation automatique. L'alinéa (tabulations) de la ligne précédente est 
			respecté lorsqu'on passe à la ligne suivante

		- nano -mi nomDuFichier.txt :
			Ouvre "nomDuFichier.txt" dans nano avec autorisation d'utilisation de la souris et indentation automatique








_GIT___________________________________________________________________________________________________________________________




	>> COMMANDES

		- git status :
			Status des fichiers. Affiche les dernières modifications effectuées dans le dossier

		- git add nomDuFichier :
			Stage le fichier "nomDuFichier" (localisé dans le dossier courant) pour un commit

		- git add nomDuDossier/nomDuFichier :
			Stage le fichier "nomDuFichier" (en utilisant son chemin d'emplacement) pour un commit

		- git add . :
			Stage tous les fichiers (à partir de l'emplacement courant) pour un commit

		- git commit -m "nomDuCommit" :
			Effectue un nouveau commit appellé "nomDuCommit"

		- git pull :
			Mise à jour du dépôt local

		- git push :
			Envoyer les commits vers le dépôt distant








_CINNAMON______________________________________________________________________________________________________________________




	>> RACCOURCIS


		> GUI

			- Ctrl + Alt + esc :
				Arrête et redémarre l'interface graphique Cinnamon

			- Alt + F2 :
				Lance une interface alternative qui permet d'executer des commandes. 'r', par exemple, arrête et redémarre 
				l'interface graphique Cinnamon

			- Ctrl + Alt + L :
				Verrouillage de l'écran




	>> COMMANDES

		- killal -HUP cinnamon :
			Arrête et redémarre l'interface graphique Cinnamon








_YOUTUBE-DL____________________________________________________________________________________________________________________




	>> LIENS


		https://github.com/ytdl-org/youtube-dl#installation
		http://ytdl-org.github.io/youtube-dl/download.html

		https://www.ostechnix.com/youtube-dl-tutorial-with-examples-for-beginners/
		https://apple.stackexchange.com/questions/349697/how-to-use-youtube-dl-cookies


		- Cookies downloader extension:
			https://chrome.google.com/webstore/detail/cookiestxt/njabckikapfpffapmjgojcnbfjonfjfg




	>> COMMANDES


		> INSTALLATION

			sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl

			sudo chmod a+rx /usr/local/bin/youtube-dl


		> UPDATE

			sudo youtube-dl -U


		> UTILISATION

			youtube-dl <url>

			youtube-dl <url1> <url2>

			youtube-dl --cookies ~/<path>/cookies.txt <url>

			youtube-dl https://www.youtube.com/watch?v=OtQZ_eyVhKQ

			youtube-dl --cookies ~/Downloads/cookies.txt https://www.youtube.com/watch?v=OtQZ_eyVhKQ